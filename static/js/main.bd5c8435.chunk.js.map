{"version":3,"sources":["theme.js","components/dialog/BondSetup.jsx","components/dialog/BondUpdate.jsx","components/dialog/DepositRewards.jsx","components/BondCard.jsx","components/dialog/Deposit.jsx","components/dialog/EmergencyWithdraw.jsx","components/dialog/Withdraw.jsx","components/UserCard.jsx","components/Main.jsx","components/App.jsx","constants.js","reportWebVitals.js","index.js"],"names":["theme","createTheme","palette","primary","teal","secondary","orange","background","default","components","MuiPaper","styleOverrides","root","boxShadow","MuiCard","borderRadius","BondSetup","open","setOpen","contract","useContext","ContractContext","useState","loading","setLoading","isActive","setIsActive","interestOneMonth","setInterestOneMonth","interestThreeMonth","setInterestThreeMonth","interestSixMonth","setInterestSixMonth","interestTwelveMonth","setInterestTwelveMonth","minimumDeposit","setMinimumDeposit","handleClose","handleSubmit","a","setupBond","transaction","wait","console","error","message","Dialog","onClose","LinearProgress","DialogTitle","DialogContent","FormControlLabel","control","Switch","checked","onChange","event","target","label","TextField","sx","my","fullWidth","type","variant","value","DialogActions","Button","onClick","BondUpdate","updateBond","DepositRewards","amount","setAmount","depositRewards","gasLimit","BondCard","bondInfo","bondSetupDialogOpen","setBondSetupDialogOpen","bondUpdateDialogOpen","setBondUpdateDialogOpen","depositRewardsDialogOpen","setDepositRewardsDialogOpen","Card","CardHeader","title","subheader","toNumber","action","Chip","color","CardContent","Typography","CardActions","Box","flex","size","CircularProgress","Deposit","timeInMonths","setTimeInMonths","deposit","EmergencyWithdraw","emergencyWithdraw","Withdraw","withdraw","UserCard","period","seconds","userInfo","depositDialogOpen","setDepositDialogOpen","withdrawDialogOpen","setWithdrawDialogOpen","emergencyWithdrawDialogOpen","setEmergencyWithdrawDialogOpen","amountDeposited","depositedOn","Date","toLocaleString","lockPeriod","Main","currentAccount","setCurrentAccount","setBondInfo","setUserInfo","errorMessage","setErrorMessage","connectWallet","window","ethereum","request","method","accounts","log","useEffect","length","account","initializeWallet","getBondInfo","getUserInfo","Container","maxWidth","pt","Alert","severity","createContext","getContract","signer","ethers","providers","Web3Provider","getSigner","Contract","abi","App","ThemeProvider","CssBaseline","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bd5c8435.chunk.js","sourcesContent":["import { orange, teal } from \"@mui/material/colors\";\nimport { createTheme } from \"@mui/material/styles\";\n\nconst theme = createTheme({\n  palette: {\n    primary: teal,\n    secondary: orange,\n    background: {\n      default: \"#F0F2F5\",\n    },\n  },\n  components: {\n    MuiPaper: {\n      styleOverrides: {\n        root: {\n          boxShadow: \"0 1px 2px rgba(0, 0, 0, 0.2)\",\n        },\n      },\n    },\n    MuiCard: {\n      styleOverrides: {\n        root: {\n          borderRadius: \"8px\",\n        },\n      },\n    },\n  },\n});\n\nexport default theme;\n","import { Switch } from \"@mui/material\";\nimport Button from \"@mui/material/Button\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport LinearProgress from \"@mui/material/LinearProgress\";\nimport TextField from \"@mui/material/TextField\";\nimport { useContext, useState } from \"react\";\nimport { ContractContext } from \"../App\";\n\nfunction BondSetup({ open, setOpen }) {\n  const contract = useContext(ContractContext);\n  const [loading, setLoading] = useState(false);\n  const [isActive, setIsActive] = useState(true);\n  const [interestOneMonth, setInterestOneMonth] = useState(\"\");\n  const [interestThreeMonth, setInterestThreeMonth] = useState(\"\");\n  const [interestSixMonth, setInterestSixMonth] = useState(\"\");\n  const [interestTwelveMonth, setInterestTwelveMonth] = useState(\"\");\n  const [minimumDeposit, setMinimumDeposit] = useState(\"\");\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleSubmit = async () => {\n    setLoading(true);\n    try {\n      const transaction = await contract.setupBond(\n        isActive,\n        interestOneMonth,\n        interestThreeMonth,\n        interestSixMonth,\n        interestTwelveMonth,\n        minimumDeposit\n      );\n      await transaction.wait();\n    } catch (error) {\n      console.error(error.message);\n    } finally {\n      setLoading(false);\n      handleClose();\n    }\n  };\n\n  return (\n    <Dialog open={open} onClose={handleClose}>\n      {loading && <LinearProgress />}\n      <DialogTitle>Setup Bond</DialogTitle>\n      <DialogContent>\n        <FormControlLabel\n          control={\n            <Switch\n              checked={isActive}\n              onChange={(event) => setIsActive(event.target.checked)}\n            />\n          }\n          label={isActive ? \"Active\" : \"Inactive\"}\n        />\n        <TextField\n          sx={{ my: 1 }}\n          fullWidth\n          label=\"Interest One Month\"\n          type=\"number\"\n          variant=\"standard\"\n          value={interestOneMonth}\n          onChange={(event) => setInterestOneMonth(event.target.value)}\n        />\n        <TextField\n          sx={{ my: 1 }}\n          fullWidth\n          label=\"Interest Three Month\"\n          type=\"number\"\n          variant=\"standard\"\n          value={interestThreeMonth}\n          onChange={(event) => setInterestThreeMonth(event.target.value)}\n        />\n        <TextField\n          sx={{ my: 1 }}\n          fullWidth\n          label=\"Interest Six Month\"\n          type=\"number\"\n          variant=\"standard\"\n          value={interestSixMonth}\n          onChange={(event) => setInterestSixMonth(event.target.value)}\n        />\n        <TextField\n          sx={{ my: 1 }}\n          fullWidth\n          label=\"Interest Twelve Month\"\n          type=\"number\"\n          variant=\"standard\"\n          value={interestTwelveMonth}\n          onChange={(event) => setInterestTwelveMonth(event.target.value)}\n        />\n        <TextField\n          sx={{ my: 1 }}\n          fullWidth\n          label=\"Minimum Deposit\"\n          type=\"number\"\n          variant=\"standard\"\n          value={minimumDeposit}\n          onChange={(event) => setMinimumDeposit(event.target.value)}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose}>Cancel</Button>\n        <Button onClick={handleSubmit}>Set up</Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nexport default BondSetup;\n","import { Switch } from \"@mui/material\";\nimport Button from \"@mui/material/Button\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport LinearProgress from \"@mui/material/LinearProgress\";\nimport TextField from \"@mui/material/TextField\";\nimport { useContext, useState } from \"react\";\nimport { ContractContext } from \"../App\";\n\nfunction BondUpdate({ open, setOpen }) {\n  const contract = useContext(ContractContext);\n  const [loading, setLoading] = useState(false);\n  const [isActive, setIsActive] = useState(true);\n  const [minimumDeposit, setMinimumDeposit] = useState(\"\");\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleSubmit = async () => {\n    setLoading(true);\n    try {\n      const transaction = await contract.updateBond(isActive, minimumDeposit);\n      await transaction.wait();\n    } catch (error) {\n      console.error(error.message);\n    } finally {\n      setLoading(false);\n      handleClose();\n    }\n  };\n\n  return (\n    <Dialog open={open} onClose={handleClose}>\n      {loading && <LinearProgress />}\n      <DialogTitle>Update Bond</DialogTitle>\n      <DialogContent>\n        <FormControlLabel\n          control={\n            <Switch\n              checked={isActive}\n              onChange={(event) => setIsActive(event.target.checked)}\n            />\n          }\n          label={isActive ? \"Active\" : \"Inactive\"}\n        />\n        <TextField\n          sx={{ my: 1 }}\n          fullWidth\n          label=\"Minimum Deposit\"\n          type=\"number\"\n          variant=\"standard\"\n          value={minimumDeposit}\n          onChange={(event) => setMinimumDeposit(event.target.value)}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose}>Cancel</Button>\n        <Button onClick={handleSubmit}>Update</Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nexport default BondUpdate;\n","import Button from \"@mui/material/Button\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport LinearProgress from \"@mui/material/LinearProgress\";\nimport TextField from \"@mui/material/TextField\";\nimport { useContext, useState } from \"react\";\nimport { ContractContext } from \"../App\";\n\nfunction DepositRewards({ open, setOpen }) {\n  const contract = useContext(ContractContext);\n  const [amount, setAmount] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleSubmit = async () => {\n    setLoading(true);\n    try {\n      const transaction = await contract.depositRewards(amount, {\n        gasLimit: 300000,\n      });\n      await transaction.wait();\n    } catch (error) {\n      console.error(error.message);\n    } finally {\n      setLoading(false);\n      handleClose();\n    }\n  };\n\n  return (\n    <Dialog open={open} onClose={handleClose}>\n      {loading && <LinearProgress />}\n      <DialogTitle>Deposit Rewards</DialogTitle>\n      <DialogContent>\n        <TextField\n          sx={{ my: 2 }}\n          fullWidth\n          label=\"Amount\"\n          type=\"number\"\n          variant=\"standard\"\n          value={amount}\n          onChange={(event) => setAmount(event.target.value)}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose}>Cancel</Button>\n        <Button onClick={handleSubmit}>Deposit</Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nexport default DepositRewards;\n","import Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport Card from \"@mui/material/Card\";\nimport CardActions from \"@mui/material/CardActions\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardHeader from \"@mui/material/CardHeader\";\nimport Chip from \"@mui/material/Chip\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport Typography from \"@mui/material/Typography\";\nimport { useState } from \"react\";\nimport BondSetupDialog from \"./dialog/BondSetup\";\nimport BondUpdateDialog from \"./dialog/BondUpdate\";\nimport DepositRewardsDialog from \"./dialog/DepositRewards\";\n\nfunction BondCard({ bondInfo }) {\n  const [bondSetupDialogOpen, setBondSetupDialogOpen] = useState(false);\n  const [bondUpdateDialogOpen, setBondUpdateDialogOpen] = useState(false);\n  const [depositRewardsDialogOpen, setDepositRewardsDialogOpen] =\n    useState(false);\n  if (!bondInfo) return <CircularProgress />;\n\n  return (\n    <Card sx={{ my: 2 }}>\n      <CardHeader\n        title=\"Bond\"\n        subheader={`Minimum Deposit: ${bondInfo.minimumDeposit.toNumber()}`}\n        action={\n          bondInfo.isActive ? (\n            <Chip label=\"Active\" variant=\"outlined\" color=\"success\" />\n          ) : (\n            <Chip label=\"Inactive\" variant=\"outlined\" />\n          )\n        }\n      />\n      <CardContent>\n        <Typography>\n          1 Month Interest: {bondInfo.interestOneMonth.toNumber()}\n        </Typography>\n        <Typography>\n          3 Month Interest: {bondInfo.interestThreeMonth.toNumber()}\n        </Typography>\n        <Typography>\n          6 Month Interest: {bondInfo.interestSixMonth.toNumber()}\n        </Typography>\n        <Typography>\n          12 Month Interest: {bondInfo.interestTwelveMonth.toNumber()}\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <Box sx={{ flex: 1 }}>\n          <Button\n            size=\"small\"\n            color=\"warning\"\n            onClick={() => setDepositRewardsDialogOpen(true)}\n          >\n            Deposit Rewards\n          </Button>\n        </Box>\n        <Button size=\"small\" onClick={() => setBondUpdateDialogOpen(true)}>\n          Update\n        </Button>\n        <Button size=\"small\" onClick={() => setBondSetupDialogOpen(true)}>\n          Setup\n        </Button>\n      </CardActions>\n      <BondSetupDialog\n        open={bondSetupDialogOpen}\n        setOpen={setBondSetupDialogOpen}\n      />\n      <BondUpdateDialog\n        open={bondUpdateDialogOpen}\n        setOpen={setBondUpdateDialogOpen}\n      />\n      <DepositRewardsDialog\n        open={depositRewardsDialogOpen}\n        setOpen={setDepositRewardsDialogOpen}\n      />\n    </Card>\n  );\n}\n\nexport default BondCard;\n","import Button from \"@mui/material/Button\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport LinearProgress from \"@mui/material/LinearProgress\";\nimport TextField from \"@mui/material/TextField\";\nimport { useContext, useState } from \"react\";\nimport { ContractContext } from \"../App\";\n\nfunction Deposit({ open, setOpen }) {\n  const contract = useContext(ContractContext);\n  const [amount, setAmount] = useState(\"\");\n  const [timeInMonths, setTimeInMonths] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleSubmit = async () => {\n    setLoading(true);\n    try {\n      const transaction = await contract.deposit(amount, timeInMonths, {\n        gasLimit: 300000,\n      });\n      await transaction.wait();\n    } catch (error) {\n      console.error(error.message);\n    } finally {\n      setLoading(false);\n      handleClose();\n    }\n  };\n\n  return (\n    <Dialog open={open} onClose={handleClose}>\n      {loading && <LinearProgress />}\n      <DialogTitle>Deposit</DialogTitle>\n      <DialogContent>\n        <TextField\n          sx={{ my: 2 }}\n          fullWidth\n          label=\"Amount\"\n          type=\"number\"\n          variant=\"standard\"\n          value={amount}\n          onChange={(event) => setAmount(event.target.value)}\n        />\n        <TextField\n          sx={{ my: 2 }}\n          fullWidth\n          label=\"Time in months\"\n          type=\"number\"\n          variant=\"standard\"\n          value={timeInMonths}\n          onChange={(event) => setTimeInMonths(event.target.value)}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose}>Cancel</Button>\n        <Button onClick={handleSubmit}>Deposit</Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nexport default Deposit;\n","import Button from \"@mui/material/Button\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport LinearProgress from \"@mui/material/LinearProgress\";\nimport { useContext, useState } from \"react\";\nimport { ContractContext } from \"../App\";\n\nfunction EmergencyWithdraw({ open, setOpen }) {\n  const contract = useContext(ContractContext);\n  const [loading, setLoading] = useState(false);\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleSubmit = async () => {\n    setLoading(true);\n    try {\n      const transaction = await contract.emergencyWithdraw({\n        gasLimit: 300000,\n      });\n      await transaction.wait();\n    } catch (error) {\n      console.error(error.message);\n    } finally {\n      setLoading(false);\n      handleClose();\n    }\n  };\n\n  return (\n    <Dialog open={open} onClose={handleClose}>\n      {loading && <LinearProgress />}\n      <DialogTitle>Emergency Withdraw</DialogTitle>\n      <DialogContent>\n        Are you sure to withdraw your fund in emergency?\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose}>Cancel</Button>\n        <Button onClick={handleSubmit}>Withdraw</Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nexport default EmergencyWithdraw;\n","import Button from \"@mui/material/Button\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport LinearProgress from \"@mui/material/LinearProgress\";\nimport { useContext, useState } from \"react\";\nimport { ContractContext } from \"../App\";\n\nfunction Withdraw({ open, setOpen }) {\n  const contract = useContext(ContractContext);\n  const [loading, setLoading] = useState(false);\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleSubmit = async () => {\n    setLoading(true);\n    try {\n      const transaction = await contract.withdraw({\n        gasLimit: 300000,\n      });\n      await transaction.wait();\n    } catch (error) {\n      console.error(error.message);\n    } finally {\n      setLoading(false);\n      handleClose();\n    }\n  };\n\n  return (\n    <Dialog open={open} onClose={handleClose}>\n      {loading && <LinearProgress />}\n      <DialogTitle>Withdraw</DialogTitle>\n      <DialogContent>Are you sure to withdraw your fund?</DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose}>Cancel</Button>\n        <Button onClick={handleSubmit}>Withdraw</Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nexport default Withdraw;\n","import Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport Card from \"@mui/material/Card\";\nimport CardActions from \"@mui/material/CardActions\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardHeader from \"@mui/material/CardHeader\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport Typography from \"@mui/material/Typography\";\nimport { useState } from \"react\";\nimport DepositDialog from \"./dialog/Deposit\";\nimport EmergencyWithdrawDialog from \"./dialog/EmergencyWithdraw\";\nimport WithdrawDialog from \"./dialog/Withdraw\";\n\nfunction getDisplayTime(seconds) {\n  if (!seconds) return \"N/A\";\n  const time = new Date(seconds * 1000);\n  return time.toLocaleString();\n}\n\nfunction getLockPeriod(period) {\n  if (!period) return \"N/A\";\n  return `${period} month`;\n}\n\nfunction UserCard({ userInfo }) {\n  const [depositDialogOpen, setDepositDialogOpen] = useState(false);\n  const [withdrawDialogOpen, setWithdrawDialogOpen] = useState(false);\n  const [emergencyWithdrawDialogOpen, setEmergencyWithdrawDialogOpen] =\n    useState(false);\n\n  if (!userInfo) return <CircularProgress />;\n\n  return (\n    <Card sx={{ my: 2 }}>\n      <CardHeader title=\"User\" />\n      <CardContent>\n        <Typography>\n          Amount Deposited: {userInfo.amountDeposited.toNumber()}\n        </Typography>\n        <Typography>\n          Deposited On: {getDisplayTime(userInfo.depositedOn.toNumber())}\n        </Typography>\n        <Typography>\n          Lock Period: {getLockPeriod(userInfo.lockPeriod.toNumber())}\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <Box sx={{ flex: 1 }}>\n          <Button\n            size=\"small\"\n            color=\"warning\"\n            onClick={() => setEmergencyWithdrawDialogOpen(true)}\n          >\n            Emergency Withdraw\n          </Button>\n        </Box>\n        <Button size=\"small\" onClick={() => setWithdrawDialogOpen(true)}>\n          Withdraw\n        </Button>\n        <Button size=\"small\" onClick={() => setDepositDialogOpen(true)}>\n          Deposit\n        </Button>\n      </CardActions>\n      <DepositDialog open={depositDialogOpen} setOpen={setDepositDialogOpen} />\n      <WithdrawDialog\n        open={withdrawDialogOpen}\n        setOpen={setWithdrawDialogOpen}\n      />\n      <EmergencyWithdrawDialog\n        open={emergencyWithdrawDialogOpen}\n        setOpen={setEmergencyWithdrawDialogOpen}\n      />\n    </Card>\n  );\n}\n\nexport default UserCard;\n","import Alert from \"@mui/material/Alert\";\nimport Button from \"@mui/material/Button\";\nimport Container from \"@mui/material/Container\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { ContractContext } from \"./App\";\nimport BondCard from \"./BondCard\";\nimport UserCard from \"./UserCard\";\n\nfunction Main() {\n  const contract = useContext(ContractContext);\n  const [currentAccount, setCurrentAccount] = useState(null);\n  const [bondInfo, setBondInfo] = useState(null);\n  const [userInfo, setUserInfo] = useState(null);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  const connectWallet = async () => {\n    try {\n      const accounts = await window.ethereum.request({\n        method: \"eth_requestAccounts\",\n      });\n      console.log(\"Connected\", accounts[0]);\n      setCurrentAccount(accounts[0]);\n      setErrorMessage(null);\n    } catch (error) {\n      setErrorMessage(error.message);\n    }\n  };\n\n  useEffect(() => {\n    const initializeWallet = async () => {\n      try {\n        const accounts = await window.ethereum.request({\n          method: \"eth_accounts\",\n        });\n        if (accounts.length !== 0) {\n          const account = accounts[0];\n          console.log(\"Found an authorized account:\", account);\n          setCurrentAccount(account);\n        }\n      } catch (error) {\n        setErrorMessage(error.message);\n      }\n    };\n\n    initializeWallet();\n  }, []);\n\n  useEffect(() => {\n    const getBondInfo = async () => {\n      try {\n        const bondInfo = await contract.bondInfo();\n        setBondInfo(bondInfo);\n      } catch (error) {\n        setErrorMessage(error.message);\n      }\n    };\n\n    const getUserInfo = async () => {\n      try {\n        const userInfo = await contract.userInfo(currentAccount);\n        setUserInfo(userInfo);\n      } catch (error) {\n        setErrorMessage(error.message);\n      }\n    };\n\n    if (currentAccount) {\n      getBondInfo();\n      getUserInfo();\n    }\n  }, [currentAccount, contract]);\n\n  return (\n    <Container maxWidth=\"sm\" sx={{ pt: 2 }}>\n      {errorMessage && <Alert severity=\"warning\">{errorMessage}</Alert>}\n      {currentAccount && <Alert severity=\"success\">{currentAccount}</Alert>}\n      {!currentAccount && (\n        <Button variant=\"outlined\" onClick={connectWallet}>\n          Connect Wallet\n        </Button>\n      )}\n      {currentAccount && <BondCard bondInfo={bondInfo} />}\n      {currentAccount && <UserCard userInfo={userInfo} />}\n    </Container>\n  );\n}\n\nexport default Main;\n","import { ThemeProvider } from \"@mui/material\";\nimport Alert from \"@mui/material/Alert\";\nimport Container from \"@mui/material/Container\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport { ethers } from \"ethers\";\nimport { createContext } from \"react\";\nimport abi from \"../abi/FixedBond.json\";\nimport { BOND_CONTRACT_ADDRESS } from \"../constants\";\nimport theme from \"../theme\";\nimport Main from \"./Main\";\n\nexport const ContractContext = createContext();\n\nfunction getContract() {\n  const provider = new ethers.providers.Web3Provider(window.ethereum);\n  const signer = provider.getSigner();\n  const contract = new ethers.Contract(BOND_CONTRACT_ADDRESS, abi.abi, signer);\n  return contract;\n}\n\nfunction App() {\n  const { ethereum } = window;\n  if (!ethereum) {\n    return (\n      <Container maxWidth=\"sm\">\n        <Alert severity=\"warning\">Make sure you have Metamask installed!</Alert>\n      </Container>\n    );\n  }\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <ContractContext.Provider value={getContract()}>\n        <Main />\n      </ContractContext.Provider>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// export const BOND_CONTRACT_ADDRESS =\n//   \"0xF753E11Ef6b4DAdEFDD1fd442089Cd5e71dEC7Ca\";\n// export const TOKEN_CONTRACT_ADDRESS =\n//   \"0x02A316bBf3A4E92e26E42b6C6fC8b7b33aA33965\";\n\nexport const BOND_CONTRACT_ADDRESS =\n  \"0xBc2CD02339ce6d75D7805D9e803D95b7f52a6e67\";\nexport const TOKEN_CONTRACT_ADDRESS =\n  \"0xF6128A92bC60e4244831ad323FAA10E87aACf7d3\";\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}